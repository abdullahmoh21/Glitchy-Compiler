// Backus-Naur Form of our language
<program> ::= { <statement> }

<statement> ::= "print" ( <expression> | <string> ) <nl>
              | "if" <comparison> "{" { <statement> } "}" <nl>
              | "while" <comparison> "{" { <statement> } "}" <nl>
              | "for" "(" <var_name> "=" <number> ";" <comparison> ";" <var_name> ("++" | "--") ")" "{" { <statement> } "}" <nl>
              | "set" <var_name> "=" <expression> <nl>
              | "input" <var_name> <nl>

<comparison> ::= <expression> ( ("==" | "!=" | ">" | ">=" | "<" | "<=" | "&&" | "||") <expression> )+
               | "!" <expression>

<expression> ::= <term> { ( "-" | "+" ) <term> }

<term> ::= <unary> { ( "/" | "*" ) <unary> }

<unary> ::= [ "+" | "-" ] <primary>

<primary> ::= <number> | <var_name>

<nl> ::= '\n'+

<string> ::= '"' { <character> } '"'
<var_name> ::= <identifier>
<number> ::= <digit> { <digit> }
<identifier> ::= <letter> { <letter> | <digit> }
<letter> ::= "a" | "b" | ... | "z" | "A" | "B" | ... | "Z"
<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
<character> ::= any printable character except '"'
